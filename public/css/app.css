:root {
  --bg-color: #ffffff;
  --bg-color-rgb: 255, 255, 255;
  --text-color: #1f1f1f;
  --text-color-rgb: 31, 31, 31;
  --accent-color: #3b82f6;
  --border-color: #dddddd;

  --toggle-bg: #e0e0e0;
  --toggle-border: #cccccc;
}

body.dark {
  --bg-color: #1f1f1f;
  --bg-color-rgb: 31, 31, 31;
  --text-color: #ffffff;
  --text-color-rgb: 255, 255, 255;
  --accent-color: #60a5fa;
  --border-color: #444444;

  --toggle-bg: #e0e0e0;
  --toggle-border: #cccccc;
}

* {
  transition: background-color 0.3s ease, color 0.3s ease;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: sans-serif;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.center {
  background-color: var(--bg-color);
  padding: 1rem;
  width: 90%;
  max-width: 600px;
  margin: 2rem auto;
  box-sizing: border-box;
  text-align: center;
}

.form-container {
  margin-top: 5rem;
  width: 100%;
  max-width: 400px;
  background-color: var(--bg-color);
  border: 1px solid var(--border-color);
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0,0,0,0.05);
  transition: opacity 0.3s ease-in-out, transform 0.3s ease;
}

.form-container.hidden {
  opacity: 0;
  visibility: hidden;
}

.tabs {
  display: flex;
  margin-bottom: 1rem;
}

.tab {
  flex: 1;
  background: none;
  border: none;
  padding: 0.75rem;
  font-weight: bold;
  color: var(--text-color);
  border-bottom: 2px solid transparent;
  cursor: pointer;
}

.tab.active {
  border-bottom: 2px solid var(--accent-color);
}

.form-section {
  display: flex;
  flex-direction: column;
}

.form-section input, .form-section button {
  margin: 0.5rem 0;
  padding: 0.75rem;
  font-size: 1rem;
  border-radius: 4px;
  border: 1px solid var(--border-color);
  background-color: var(--bg-color);
  color: var(--text-color);
}

.form-section button {
  background-color: var(--accent-color);
  color: #fff;
  border: none;
  cursor: pointer;
}

.hidden {
  display: none !important;
}

/* Add styling for the expiration input container */
.expiration-input-container {
    display: flex;
    align-items: center; /* Vertically align the items */
    margin: 0.5rem 0; /* Match the margin of other form elements */
    flex-wrap: nowrap; /* Prevent wrapping */
}

.expiration-input-container input[type="number"] {
    margin: 0; /* Remove default margin */
    margin-right: 0.5rem; /* Add some space between input and text */
    flex-grow: 1; /* Allow the input to take up available space */
    min-width: 0; /* Allow the input to shrink below its content size in flex item */
}

.expiration-input-container span { /* Target the span we added */
    /* Adjust styling for the text if needed */
    flex-shrink: 0; /* Prevent the text from shrinking */
}

/* Toggle Mode Switch - Modern, Fixed Top Right */
.toggle-mode-container {
  position: fixed;
  top: 1.5rem;
  right: 1.5rem;
  z-index: 100;
  display: flex;
  align-items: center;
}

.toggle {
  width: 56px;
  height: 32px;
  background: #e0e0e0;
  border-radius: 16px;
  display: flex;
  align-items: center;
  cursor: pointer;
  transition: background 0.3s;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  position: relative;
}

body.dark .toggle {
  background: #222;
}

.toggle__circle {
  width: 28px;
  height: 28px;
  background: #fff;
  border-radius: 50%;
  position: absolute;
  left: 2px;
  top: 2px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: left 0.3s, background 0.3s;
  font-size: 1.2rem;
  box-shadow: 0 1px 4px rgba(0,0,0,0.10);
}

body.dark .toggle__circle {
  left: 26px;
  background: #333;
}

.toggle__circle .icon {
  transition: color 0.3s;
}

body.dark .toggle__circle .icon {
  color: #ffe066;
}

.toggle:active .toggle__circle {
  box-shadow: 0 2px 8px rgba(0,0,0,0.18);
}

/*Chat Room*/

/* Initial state for chat container */
#chat-container {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
    /* Ensure it's displayed correctly when visible (JS removes .hidden) */
    display: flex; /* Assuming chatContainer should be display: flex; as in your JS */
    flex-direction: column; /* Adjust if needed based on your layout */
}

/* State when chat container is NOT hidden */
#chat-container:not(.hidden) {
    opacity: 1;
    visibility: visible;
}

/* Mobile: toggle inside chat header, not fixed */
@media (max-width: 768px) {
  .toggle-mode-container {
    position: static !important;
    top: unset;
    right: unset;
    margin-left: auto;
    margin-right: 0.5rem;
    margin-top: 0;
    z-index: 1;
  }
  .chat-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
  }
}

/* --- Loading Indicator Styles --- */
.loading-indicator {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(var(--bg-color-rgb), 0.8);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  color: var(--text-color);
  font-size: 1.2rem;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  /* Initial state */
  opacity: 0;
  visibility: hidden;
}

.loading-indicator .spinner {
  border: 6px solid rgba(var(--text-color-rgb), 0.05);
  border-left-color: var(--accent-color);
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 0.8s ease-in-out infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-indicator.hidden {
    /* Hidden state managed by opacity/visibility */
}
